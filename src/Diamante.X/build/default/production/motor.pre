
# 1 "motor.c"

# 15 "motor.h"
typedef enum
{
LEFT_MOTOR,
RIGHT_MOTOR
} MOTOR_TYPE;

typedef enum
{
BACK_MOTOR,
FORWARD_MOTOR
} MOTOR_DIRECTION;

typedef struct motor
{
MOTOR_TYPE type;
char position[4];
char pos;
unsigned char *port;
} Motor;

void Motor_Init(Motor *motor, MOTOR_TYPE id, unsigned char *port);
void Motor_AddPosition(Motor *motor, char position, char value);
void Motor_Move(Motor *motor, MOTOR_DIRECTION move);

# 7 "motor.c"
void Motor_Init(Motor* motor, MOTOR_TYPE id, unsigned char* port)
{
motor->type = id;
motor->port = port;
}

void Motor_AddPosition(Motor* motor, char position, char value)
{
motor->position[position] = value;
}

void Motor_Move(Motor* motor, MOTOR_DIRECTION move)
{
unsigned char port, i;
port = 0;
for(i=0; i<4; i++)
port |= motor->position[i];
port = ~port;
port &= *(motor->port);
switch(move)
{
case FORWARD_MOTOR:
if(motor->pos < 3)
motor->pos++;
else
motor->pos = 0;
break;
case BACK_MOTOR:
if(motor->pos > 0)
motor->pos--;
else
motor->pos = 3;
break;
}
port |= motor->position[motor->pos];
*(motor->port) = port;
}
